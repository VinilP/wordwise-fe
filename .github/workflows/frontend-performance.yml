name: Frontend Performance Monitoring

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  FRONTEND_DIR: './frontend'

jobs:
  performance-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Analyze bundle size
        run: |
          echo "## üìä Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Statistics" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Largest files:" >> $GITHUB_STEP_SUMMARY
          find dist/ -type f -exec du -h {} + | sort -rh | head -10 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Check for large files
        run: |
          LARGE_FILES=$(find dist/ -type f -size +500k | wc -l)
          if [ $LARGE_FILES -gt 0 ]; then
            echo "‚ö†Ô∏è Warning: Found $LARGE_FILES files larger than 500KB"
            find dist/ -type f -size +500k -exec ls -lh {} \;
          else
            echo "‚úÖ No files larger than 500KB found"
          fi

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './frontend/.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Performance budget check
        run: |
          # Check if bundle size exceeds budget
          BUNDLE_SIZE=$(du -s dist/ | cut -f1)
          MAX_SIZE=50000 # 50MB in KB
          
          if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
            echo "‚ùå Bundle size ($BUNDLE_SIZE KB) exceeds budget ($MAX_SIZE KB)"
            exit 1
          else
            echo "‚úÖ Bundle size ($BUNDLE_SIZE KB) is within budget ($MAX_SIZE KB)"
          fi

  accessibility-audit:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    needs: performance-audit
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run accessibility tests
        run: npm run test:accessibility

      - name: Build and start preview server
        run: |
          npm run build
          npm run preview &
          sleep 10

      - name: Run axe-core audit
        run: |
          npx @axe-core/cli http://localhost:4173 --exit
